/**
 * @author Blue Media S.A.
 * @copyright Blue Media S.A.
 * @version 2.0.0
 * @preserve
 */
function GooglePay(t,e,n,a,o,i,r,s){this.environment=t,this.authToken=e,this.merchantId=n,this.merchantDomain=a,this.merchantName=o,this.gatewayMerchantId=i,this.supportedCardAuthMethods=s,this.supportedCardNetworks=r,this.requireShippingAddress=!1,this.client=null,this.transactionAmount=0,this.transactionCurrencyCode="",this.transactionCountryCode="",this.transactionStatus="",this.payButtonContainerId="js-pay-button-wrapper"}GooglePay.prototype._createPayButton=function(t){const e=this,n=e.client.createButton({onClick:function(){e._onPayButtonClickCallback(t)}});document.getElementById(e.payButtonContainerId).appendChild(n)},GooglePay.prototype._getPaymentDataRequestData=function(){return{apiVersion:2,apiVersionMinor:0,merchantInfo:{merchantId:this.merchantId,merchantOrigin:this.merchantDomain,merchantName:this.merchantName,authJwt:this.authToken},allowedPaymentMethods:[{type:"CARD",parameters:{allowedAuthMethods:this.supportedCardAuthMethods,allowedCardNetworks:this.supportedCardNetworks},tokenizationSpecification:{type:"PAYMENT_GATEWAY",parameters:{gateway:"bluemedia",gatewayMerchantId:this.gatewayMerchantId}}}],transactionInfo:{currencyCode:this.transactionCurrencyCode,countryCode:this.transactionCountryCode,totalPriceStatus:this.transactionStatus,totalPrice:this.transactionAmount},shippingAddressRequired:this.requireShippingAddress}},GooglePay.prototype._getIsReadyToPayRequestData=function(){const t=this._getPaymentDataRequestData();return delete t.merchantInfo,delete t.transactionInfo,delete t.shippingAddressRequired,t},GooglePay.prototype._initApiClient=function(){this.client=new google.payments.api.PaymentsClient({environment:this.environment})},GooglePay.prototype._onPayButtonClickCallback=function(t){const e=this;e.client.loadPaymentData(e._getPaymentDataRequestData()).then(function(e){t(e)}).catch(function(t){e.onErrorCallback(t)})},GooglePay.prototype._prefetchTransactionData=function(){this.client.prefetchPaymentData(this._getPaymentDataRequestData())},GooglePay.prototype.init=function(t){const e=this;e._initApiClient(),e.client.isReadyToPay(e._getIsReadyToPayRequestData()).then(function(n){n.result?(e._createPayButton(t),e._prefetchTransactionData()):e.onErrorCallback(n)}).catch(function(t){e.onErrorCallback(t)})},GooglePay.prototype.onErrorCallback=function(t){console.error(t)},GooglePay.prototype.setRequireShippingAddress=function(t){this.requireShippingAddress=t},GooglePay.prototype.setTransactionAmount=function(t){this.transactionAmount=t},GooglePay.prototype.setTransactionCurrencyCode=function(t){this.transactionCurrencyCode=t},GooglePay.prototype.setTransactionCountryCode=function(t){this.transactionCountryCode=t},GooglePay.prototype.setTransactionStatus=function(t){this.transactionStatus=t};